{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","handleChange","e","target","name","value","setState","configureCaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","response","onSignInSubmit","console","log","defaultCountry","preventDefault","phoneNumber","state","mobile","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","onSubmitOTP","code","otp","confirm","result","user","JSON","stringify","alert","onSubmit","this","id","type","placeholder","required","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAYEA,IAASC,cATY,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,OCiEeQ,E,4MA3EbC,aAAe,SAACC,GACd,MAAuBA,EAAEC,OAAlBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACb,EAAKC,SAAL,eACKF,EAAOC,K,EAGdE,iBAAmB,WACjBC,OAAOC,kBAAoB,IAAIjB,EAASkB,KAAKC,kBAAkB,iBAAkB,CAC/E,KAAQ,YACR,SAAY,SAACC,GAEX,EAAKC,iBACLC,QAAQC,IAAI,sBAEdC,eAAgB,Q,EAGpBH,eAAiB,SAACX,GAChBA,EAAEe,iBACF,EAAKV,mBACL,IAAMW,EAAc,MAAQ,EAAKC,MAAMC,OACvCN,QAAQC,IAAIG,GACZ,IAAMG,EAAcb,OAAOC,kBAC3BjB,EAASkB,OAAOY,sBAAsBJ,EAAaG,GAC9CE,MAAK,SAACC,GAGLhB,OAAOgB,mBAAqBA,EAC5BV,QAAQC,IAAI,wBAEXU,OAAM,SAACC,GAGRZ,QAAQC,IAAI,oB,EAGpBY,YAAc,SAACzB,GACbA,EAAEe,iBACF,IAAMW,EAAO,EAAKT,MAAMU,IACxBf,QAAQC,IAAIa,GACZpB,OAAOgB,mBAAmBM,QAAQF,GAAML,MAAK,SAACQ,GAE5C,IAAMC,EAAOD,EAAOC,KACpBlB,QAAQC,IAAIkB,KAAKC,UAAUF,IAC3BG,MAAM,uBAELV,OAAM,SAACC,Q,4CAKZ,WACE,OACE,gCACE,4CACA,uBAAMU,SAAUC,KAAKxB,eAArB,UACE,qBAAKyB,GAAG,mBACR,uBAAOC,KAAK,SAASnC,KAAK,SAASoC,YAAY,gBAAgBC,UAAQ,EAACC,SAAUL,KAAKpC,eACvF,wBAAQsC,KAAK,SAAb,uBAGF,2CACA,uBAAMH,SAAUC,KAAKV,YAArB,UACE,uBAAOY,KAAK,SAASnC,KAAK,MAAMoC,YAAY,aAAaC,UAAQ,EAACC,SAAUL,KAAKpC,eACjF,wBAAQsC,KAAK,SAAb,uBAMJ,yE,GAvEYI,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f52fe09d.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCHFy-mOJ4U1CA2AAYmtFZVsI0tY--taxk\",\n  authDomain: \"otp-app-493fd.firebaseapp.com\",\n  projectId: \"otp-app-493fd\",\n  storageBucket: \"otp-app-493fd.appspot.com\",\n  messagingSenderId: \"477951517145\",\n  appId: \"1:477951517145:web:5d101bffc6884c1af939c8\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  \nexport default firebase\n","import React from 'react'\nimport firebase from './firebase'\n\nclass App extends React.Component {\n  handleChange = (e) =>{\n    const {name, value } = e.target\n    this.setState({\n        [name]: value\n      })\n  }\n  configureCaptcha = () =>{\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('sign-in-button', {\n      'size': 'invisible',\n      'callback': (response) => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        this.onSignInSubmit();\n        console.log(\"Recaptca varified\")\n      },\n      defaultCountry: \"IN\"\n    });\n  }\n  onSignInSubmit = (e) => {\n    e.preventDefault()\n    this.configureCaptcha()\n    const phoneNumber = \"+91\" + this.state.mobile\n    console.log(phoneNumber)\n    const appVerifier = window.recaptchaVerifier;\n    firebase.auth().signInWithPhoneNumber(phoneNumber, appVerifier)\n        .then((confirmationResult) => {\n          // SMS sent. Prompt user to type the code from the message, then sign the\n          // user in with confirmationResult.confirm(code).\n          window.confirmationResult = confirmationResult;\n          console.log(\"OTP has been sent\")\n          // ...\n        }).catch((error) => {\n          // Error; SMS not sent\n          // ...\n          console.log(\"SMS not sent\")\n        });\n  }\n  onSubmitOTP = (e) =>{\n    e.preventDefault()\n    const code = this.state.otp\n    console.log(code)\n    window.confirmationResult.confirm(code).then((result) => {\n      // User signed in successfully.\n      const user = result.user;\n      console.log(JSON.stringify(user))\n      alert(\"User is verified\")\n      // ...\n    }).catch((error) => {\n      // User couldn't sign in (bad verification code?)\n      // ...\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h2>Login Form</h2>\n        <form onSubmit={this.onSignInSubmit}>\n          <div id=\"sign-in-button\"></div>\n          <input type=\"number\" name=\"mobile\" placeholder=\"Mobile number\" required onChange={this.handleChange}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n\n        <h2>Enter OTP</h2>\n        <form onSubmit={this.onSubmitOTP}>\n          <input type=\"number\" name=\"otp\" placeholder=\"OTP Number\" required onChange={this.handleChange}/>\n          <button type=\"submit\">Submit</button>\n\n                \n\n\n        </form>\n      <h4> refresh the page to get new otp</h4>\n      </div>\n    )\n  }\n}\nexport default App\n \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}